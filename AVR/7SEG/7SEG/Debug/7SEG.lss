
7SEG.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000188  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001dc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000020c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000073d  00000000  00000000  00000290  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000647  00000000  00000000  000009cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000440  00000000  00000000  00001014  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000058  00000000  00000000  00001454  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000336  00000000  00000000  000014ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000022c  00000000  00000000  000017e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001a0e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 b1 00 	call	0x162	; 0x162 <main>
  64:	0c 94 c2 00 	jmp	0x184	; 0x184 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <SEVEN_SEG_init>:
 *  Author: safifi
 */ 
#include "SEVEN_SEG.h"

void SEVEN_SEG_init(void){
	INIT_SEVEN_SEG_PINS;
  6c:	8a b3       	in	r24, 0x1a	; 26
  6e:	8c 6f       	ori	r24, 0xFC	; 252
  70:	8a bb       	out	0x1a, r24	; 26
  72:	08 95       	ret

00000074 <SEVEN_SEG_write>:
}
void SEVEN_SEG_write(uint8_t data){ // 0 to 99
	uint8_t x = data % 10; // 
  74:	9d ec       	ldi	r25, 0xCD	; 205
  76:	89 9f       	mul	r24, r25
  78:	91 2d       	mov	r25, r1
  7a:	11 24       	eor	r1, r1
  7c:	96 95       	lsr	r25
  7e:	96 95       	lsr	r25
  80:	96 95       	lsr	r25
  82:	99 0f       	add	r25, r25
  84:	29 2f       	mov	r18, r25
  86:	22 0f       	add	r18, r18
  88:	22 0f       	add	r18, r18
  8a:	92 0f       	add	r25, r18
  8c:	28 2f       	mov	r18, r24
  8e:	29 1b       	sub	r18, r25
  90:	92 2f       	mov	r25, r18
	EN2(1);
  92:	2b b3       	in	r18, 0x1b	; 27
  94:	24 60       	ori	r18, 0x04	; 4
  96:	2b bb       	out	0x1b, r18	; 27
	EN1(0);
  98:	2b b3       	in	r18, 0x1b	; 27
  9a:	27 7f       	andi	r18, 0xF7	; 247
  9c:	2b bb       	out	0x1b, r18	; 27
	A(READBIT(x,0));
  9e:	90 ff       	sbrs	r25, 0
  a0:	04 c0       	rjmp	.+8      	; 0xaa <SEVEN_SEG_write+0x36>
  a2:	2b b3       	in	r18, 0x1b	; 27
  a4:	20 61       	ori	r18, 0x10	; 16
  a6:	2b bb       	out	0x1b, r18	; 27
  a8:	03 c0       	rjmp	.+6      	; 0xb0 <SEVEN_SEG_write+0x3c>
  aa:	2b b3       	in	r18, 0x1b	; 27
  ac:	2f 7e       	andi	r18, 0xEF	; 239
  ae:	2b bb       	out	0x1b, r18	; 27
	B(READBIT(x,1));
  b0:	91 ff       	sbrs	r25, 1
  b2:	04 c0       	rjmp	.+8      	; 0xbc <SEVEN_SEG_write+0x48>
  b4:	2b b3       	in	r18, 0x1b	; 27
  b6:	20 62       	ori	r18, 0x20	; 32
  b8:	2b bb       	out	0x1b, r18	; 27
  ba:	03 c0       	rjmp	.+6      	; 0xc2 <SEVEN_SEG_write+0x4e>
  bc:	2b b3       	in	r18, 0x1b	; 27
  be:	2f 7d       	andi	r18, 0xDF	; 223
  c0:	2b bb       	out	0x1b, r18	; 27
	C(READBIT(x,2));
  c2:	92 ff       	sbrs	r25, 2
  c4:	04 c0       	rjmp	.+8      	; 0xce <SEVEN_SEG_write+0x5a>
  c6:	2b b3       	in	r18, 0x1b	; 27
  c8:	20 64       	ori	r18, 0x40	; 64
  ca:	2b bb       	out	0x1b, r18	; 27
  cc:	03 c0       	rjmp	.+6      	; 0xd4 <SEVEN_SEG_write+0x60>
  ce:	2b b3       	in	r18, 0x1b	; 27
  d0:	2f 7b       	andi	r18, 0xBF	; 191
  d2:	2b bb       	out	0x1b, r18	; 27
	D(READBIT(x,3));
  d4:	93 ff       	sbrs	r25, 3
  d6:	04 c0       	rjmp	.+8      	; 0xe0 <SEVEN_SEG_write+0x6c>
  d8:	9b b3       	in	r25, 0x1b	; 27
  da:	90 68       	ori	r25, 0x80	; 128
  dc:	9b bb       	out	0x1b, r25	; 27
  de:	03 c0       	rjmp	.+6      	; 0xe6 <SEVEN_SEG_write+0x72>
  e0:	9b b3       	in	r25, 0x1b	; 27
  e2:	9f 77       	andi	r25, 0x7F	; 127
  e4:	9b bb       	out	0x1b, r25	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e6:	ef e3       	ldi	r30, 0x3F	; 63
  e8:	fc e9       	ldi	r31, 0x9C	; 156
  ea:	31 97       	sbiw	r30, 0x01	; 1
  ec:	f1 f7       	brne	.-4      	; 0xea <SEVEN_SEG_write+0x76>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <SEVEN_SEG_write+0x7c>
  f0:	00 00       	nop
	_delay_ms(10);
	
	x = data / 10;
  f2:	9d ec       	ldi	r25, 0xCD	; 205
  f4:	89 9f       	mul	r24, r25
  f6:	81 2d       	mov	r24, r1
  f8:	11 24       	eor	r1, r1
  fa:	86 95       	lsr	r24
  fc:	86 95       	lsr	r24
  fe:	86 95       	lsr	r24
	EN2(0);
 100:	9b b3       	in	r25, 0x1b	; 27
 102:	9b 7f       	andi	r25, 0xFB	; 251
 104:	9b bb       	out	0x1b, r25	; 27
	EN1(1);
 106:	9b b3       	in	r25, 0x1b	; 27
 108:	98 60       	ori	r25, 0x08	; 8
 10a:	9b bb       	out	0x1b, r25	; 27
	A(READBIT(x,0));
 10c:	80 ff       	sbrs	r24, 0
 10e:	04 c0       	rjmp	.+8      	; 0x118 <SEVEN_SEG_write+0xa4>
 110:	9b b3       	in	r25, 0x1b	; 27
 112:	90 61       	ori	r25, 0x10	; 16
 114:	9b bb       	out	0x1b, r25	; 27
 116:	03 c0       	rjmp	.+6      	; 0x11e <SEVEN_SEG_write+0xaa>
 118:	9b b3       	in	r25, 0x1b	; 27
 11a:	9f 7e       	andi	r25, 0xEF	; 239
 11c:	9b bb       	out	0x1b, r25	; 27
	B(READBIT(x,1));
 11e:	81 ff       	sbrs	r24, 1
 120:	04 c0       	rjmp	.+8      	; 0x12a <SEVEN_SEG_write+0xb6>
 122:	9b b3       	in	r25, 0x1b	; 27
 124:	90 62       	ori	r25, 0x20	; 32
 126:	9b bb       	out	0x1b, r25	; 27
 128:	03 c0       	rjmp	.+6      	; 0x130 <SEVEN_SEG_write+0xbc>
 12a:	9b b3       	in	r25, 0x1b	; 27
 12c:	9f 7d       	andi	r25, 0xDF	; 223
 12e:	9b bb       	out	0x1b, r25	; 27
	C(READBIT(x,2));
 130:	82 ff       	sbrs	r24, 2
 132:	04 c0       	rjmp	.+8      	; 0x13c <SEVEN_SEG_write+0xc8>
 134:	9b b3       	in	r25, 0x1b	; 27
 136:	90 64       	ori	r25, 0x40	; 64
 138:	9b bb       	out	0x1b, r25	; 27
 13a:	03 c0       	rjmp	.+6      	; 0x142 <SEVEN_SEG_write+0xce>
 13c:	9b b3       	in	r25, 0x1b	; 27
 13e:	9f 7b       	andi	r25, 0xBF	; 191
 140:	9b bb       	out	0x1b, r25	; 27
	D(READBIT(x,3));
 142:	83 ff       	sbrs	r24, 3
 144:	04 c0       	rjmp	.+8      	; 0x14e <SEVEN_SEG_write+0xda>
 146:	8b b3       	in	r24, 0x1b	; 27
 148:	80 68       	ori	r24, 0x80	; 128
 14a:	8b bb       	out	0x1b, r24	; 27
 14c:	03 c0       	rjmp	.+6      	; 0x154 <SEVEN_SEG_write+0xe0>
 14e:	8b b3       	in	r24, 0x1b	; 27
 150:	8f 77       	andi	r24, 0x7F	; 127
 152:	8b bb       	out	0x1b, r24	; 27
 154:	8f e3       	ldi	r24, 0x3F	; 63
 156:	9c e9       	ldi	r25, 0x9C	; 156
 158:	01 97       	sbiw	r24, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <SEVEN_SEG_write+0xe4>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <SEVEN_SEG_write+0xea>
 15e:	00 00       	nop
 160:	08 95       	ret

00000162 <main>:
#include "SEVEN_SEG.h"

int main(void)
{
	uint8_t x = 0;
	SEVEN_SEG_init();
 162:	0e 94 36 00 	call	0x6c	; 0x6c <SEVEN_SEG_init>

#include "SEVEN_SEG.h"

int main(void)
{
	uint8_t x = 0;
 166:	d0 e0       	ldi	r29, 0x00	; 0
 168:	01 c0       	rjmp	.+2      	; 0x16c <main+0xa>
		
		for(uint8_t i = 0; i < 20; i++){
			SEVEN_SEG_write(x);
		}		
		x++;
		if(x == 100) x  = 0;
 16a:	d0 e0       	ldi	r29, 0x00	; 0
	SEVEN_SEG_init();
	
    while(1)
    {
		
		for(uint8_t i = 0; i < 20; i++){
 16c:	c0 e0       	ldi	r28, 0x00	; 0
 16e:	04 c0       	rjmp	.+8      	; 0x178 <main+0x16>
			SEVEN_SEG_write(x);
 170:	8d 2f       	mov	r24, r29
 172:	0e 94 3a 00 	call	0x74	; 0x74 <SEVEN_SEG_write>
	SEVEN_SEG_init();
	
    while(1)
    {
		
		for(uint8_t i = 0; i < 20; i++){
 176:	cf 5f       	subi	r28, 0xFF	; 255
 178:	c4 31       	cpi	r28, 0x14	; 20
 17a:	d0 f3       	brcs	.-12     	; 0x170 <main+0xe>
			SEVEN_SEG_write(x);
		}		
		x++;
 17c:	df 5f       	subi	r29, 0xFF	; 255
		if(x == 100) x  = 0;
 17e:	d4 36       	cpi	r29, 0x64	; 100
 180:	a9 f7       	brne	.-22     	; 0x16c <main+0xa>
 182:	f3 cf       	rjmp	.-26     	; 0x16a <main+0x8>

00000184 <_exit>:
 184:	f8 94       	cli

00000186 <__stop_program>:
 186:	ff cf       	rjmp	.-2      	; 0x186 <__stop_program>
