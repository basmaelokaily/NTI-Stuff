
GPIO_2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006e8  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000818  08000820  00010820  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000818  08000818  00010820  2**0
                  CONTENTS
  4 .ARM          00000000  08000818  08000818  00010820  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000818  08000820  00010820  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000818  08000818  00010818  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800081c  0800081c  0001081c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010820  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000820  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000820  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00010820  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010849  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000565  00000000  00000000  0001088c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000287  00000000  00000000  00010df1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b8  00000000  00000000  00011078  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000007a  00000000  00000000  00011130  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001354  00000000  00000000  000111aa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000936  00000000  00000000  000124fe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00004985  00000000  00000000  00012e34  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000001b0  00000000  00000000  000177bc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000047  00000000  00000000  0001796c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08000800 	.word	0x08000800

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08000800 	.word	0x08000800

08000170 <DIO_voidSetPinDirection>:
 *  Created on: Nov 6, 2023
 *      Author: LENOVO
 */
#include "DIO_interface.h"
void	DIO_voidSetPinDirection(u8 port, u8 pin, u8 Direction)
{
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0
 8000176:	4603      	mov	r3, r0
 8000178:	71fb      	strb	r3, [r7, #7]
 800017a:	460b      	mov	r3, r1
 800017c:	71bb      	strb	r3, [r7, #6]
 800017e:	4613      	mov	r3, r2
 8000180:	717b      	strb	r3, [r7, #5]
	switch (port)
 8000182:	79fb      	ldrb	r3, [r7, #7]
 8000184:	2b02      	cmp	r3, #2
 8000186:	d048      	beq.n	800021a <DIO_voidSetPinDirection+0xaa>
 8000188:	2b02      	cmp	r3, #2
 800018a:	dc67      	bgt.n	800025c <DIO_voidSetPinDirection+0xec>
 800018c:	2b00      	cmp	r3, #0
 800018e:	d002      	beq.n	8000196 <DIO_voidSetPinDirection+0x26>
 8000190:	2b01      	cmp	r3, #1
 8000192:	d021      	beq.n	80001d8 <DIO_voidSetPinDirection+0x68>
				GPIOC_CRH ^= (Direction<<pin*4);
			}
			break;
	}

}
 8000194:	e062      	b.n	800025c <DIO_voidSetPinDirection+0xec>
			if(pin < 8)
 8000196:	79bb      	ldrb	r3, [r7, #6]
 8000198:	2b07      	cmp	r3, #7
 800019a:	d80e      	bhi.n	80001ba <DIO_voidSetPinDirection+0x4a>
				GPIOA_CRL &= MASK<<pin*4;
 800019c:	4b32      	ldr	r3, [pc, #200]	; (8000268 <DIO_voidSetPinDirection+0xf8>)
 800019e:	2200      	movs	r2, #0
 80001a0:	601a      	str	r2, [r3, #0]
				GPIOA_CRL ^= (Direction<<pin*4);
 80001a2:	4b31      	ldr	r3, [pc, #196]	; (8000268 <DIO_voidSetPinDirection+0xf8>)
 80001a4:	681b      	ldr	r3, [r3, #0]
 80001a6:	7979      	ldrb	r1, [r7, #5]
 80001a8:	79ba      	ldrb	r2, [r7, #6]
 80001aa:	0092      	lsls	r2, r2, #2
 80001ac:	fa01 f202 	lsl.w	r2, r1, r2
 80001b0:	4611      	mov	r1, r2
 80001b2:	4a2d      	ldr	r2, [pc, #180]	; (8000268 <DIO_voidSetPinDirection+0xf8>)
 80001b4:	404b      	eors	r3, r1
 80001b6:	6013      	str	r3, [r2, #0]
			break;
 80001b8:	e050      	b.n	800025c <DIO_voidSetPinDirection+0xec>
				GPIOA_CRH &= MASK<<pin*4;
 80001ba:	4b2c      	ldr	r3, [pc, #176]	; (800026c <DIO_voidSetPinDirection+0xfc>)
 80001bc:	2200      	movs	r2, #0
 80001be:	601a      	str	r2, [r3, #0]
				GPIOA_CRH ^= (Direction<<pin*4);
 80001c0:	4b2a      	ldr	r3, [pc, #168]	; (800026c <DIO_voidSetPinDirection+0xfc>)
 80001c2:	681b      	ldr	r3, [r3, #0]
 80001c4:	7979      	ldrb	r1, [r7, #5]
 80001c6:	79ba      	ldrb	r2, [r7, #6]
 80001c8:	0092      	lsls	r2, r2, #2
 80001ca:	fa01 f202 	lsl.w	r2, r1, r2
 80001ce:	4611      	mov	r1, r2
 80001d0:	4a26      	ldr	r2, [pc, #152]	; (800026c <DIO_voidSetPinDirection+0xfc>)
 80001d2:	404b      	eors	r3, r1
 80001d4:	6013      	str	r3, [r2, #0]
			break;
 80001d6:	e041      	b.n	800025c <DIO_voidSetPinDirection+0xec>
			if(pin < 8)
 80001d8:	79bb      	ldrb	r3, [r7, #6]
 80001da:	2b07      	cmp	r3, #7
 80001dc:	d80e      	bhi.n	80001fc <DIO_voidSetPinDirection+0x8c>
				GPIOB_CRL &= MASK<<pin*4;
 80001de:	4b24      	ldr	r3, [pc, #144]	; (8000270 <DIO_voidSetPinDirection+0x100>)
 80001e0:	2200      	movs	r2, #0
 80001e2:	601a      	str	r2, [r3, #0]
				GPIOB_CRL ^= (Direction<<pin*4);
 80001e4:	4b22      	ldr	r3, [pc, #136]	; (8000270 <DIO_voidSetPinDirection+0x100>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	7979      	ldrb	r1, [r7, #5]
 80001ea:	79ba      	ldrb	r2, [r7, #6]
 80001ec:	0092      	lsls	r2, r2, #2
 80001ee:	fa01 f202 	lsl.w	r2, r1, r2
 80001f2:	4611      	mov	r1, r2
 80001f4:	4a1e      	ldr	r2, [pc, #120]	; (8000270 <DIO_voidSetPinDirection+0x100>)
 80001f6:	404b      	eors	r3, r1
 80001f8:	6013      	str	r3, [r2, #0]
			break;
 80001fa:	e02f      	b.n	800025c <DIO_voidSetPinDirection+0xec>
				GPIOB_CRH &= MASK<<pin*4;
 80001fc:	4b1d      	ldr	r3, [pc, #116]	; (8000274 <DIO_voidSetPinDirection+0x104>)
 80001fe:	2200      	movs	r2, #0
 8000200:	601a      	str	r2, [r3, #0]
				GPIOB_CRH ^= (Direction<<pin*4);
 8000202:	4b1c      	ldr	r3, [pc, #112]	; (8000274 <DIO_voidSetPinDirection+0x104>)
 8000204:	681b      	ldr	r3, [r3, #0]
 8000206:	7979      	ldrb	r1, [r7, #5]
 8000208:	79ba      	ldrb	r2, [r7, #6]
 800020a:	0092      	lsls	r2, r2, #2
 800020c:	fa01 f202 	lsl.w	r2, r1, r2
 8000210:	4611      	mov	r1, r2
 8000212:	4a18      	ldr	r2, [pc, #96]	; (8000274 <DIO_voidSetPinDirection+0x104>)
 8000214:	404b      	eors	r3, r1
 8000216:	6013      	str	r3, [r2, #0]
			break;
 8000218:	e020      	b.n	800025c <DIO_voidSetPinDirection+0xec>
			if(pin < 8)
 800021a:	79bb      	ldrb	r3, [r7, #6]
 800021c:	2b07      	cmp	r3, #7
 800021e:	d80e      	bhi.n	800023e <DIO_voidSetPinDirection+0xce>
				GPIOC_CRL &= MASK<<pin*4;
 8000220:	4b15      	ldr	r3, [pc, #84]	; (8000278 <DIO_voidSetPinDirection+0x108>)
 8000222:	2200      	movs	r2, #0
 8000224:	601a      	str	r2, [r3, #0]
				GPIOC_CRL ^= (Direction<<pin*4);
 8000226:	4b14      	ldr	r3, [pc, #80]	; (8000278 <DIO_voidSetPinDirection+0x108>)
 8000228:	681b      	ldr	r3, [r3, #0]
 800022a:	7979      	ldrb	r1, [r7, #5]
 800022c:	79ba      	ldrb	r2, [r7, #6]
 800022e:	0092      	lsls	r2, r2, #2
 8000230:	fa01 f202 	lsl.w	r2, r1, r2
 8000234:	4611      	mov	r1, r2
 8000236:	4a10      	ldr	r2, [pc, #64]	; (8000278 <DIO_voidSetPinDirection+0x108>)
 8000238:	404b      	eors	r3, r1
 800023a:	6013      	str	r3, [r2, #0]
			break;
 800023c:	e00d      	b.n	800025a <DIO_voidSetPinDirection+0xea>
				GPIOC_CRH &= MASK<<pin*4;
 800023e:	4b0f      	ldr	r3, [pc, #60]	; (800027c <DIO_voidSetPinDirection+0x10c>)
 8000240:	2200      	movs	r2, #0
 8000242:	601a      	str	r2, [r3, #0]
				GPIOC_CRH ^= (Direction<<pin*4);
 8000244:	4b0d      	ldr	r3, [pc, #52]	; (800027c <DIO_voidSetPinDirection+0x10c>)
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	7979      	ldrb	r1, [r7, #5]
 800024a:	79ba      	ldrb	r2, [r7, #6]
 800024c:	0092      	lsls	r2, r2, #2
 800024e:	fa01 f202 	lsl.w	r2, r1, r2
 8000252:	4611      	mov	r1, r2
 8000254:	4a09      	ldr	r2, [pc, #36]	; (800027c <DIO_voidSetPinDirection+0x10c>)
 8000256:	404b      	eors	r3, r1
 8000258:	6013      	str	r3, [r2, #0]
			break;
 800025a:	bf00      	nop
}
 800025c:	bf00      	nop
 800025e:	370c      	adds	r7, #12
 8000260:	46bd      	mov	sp, r7
 8000262:	bc80      	pop	{r7}
 8000264:	4770      	bx	lr
 8000266:	bf00      	nop
 8000268:	40010800 	.word	0x40010800
 800026c:	40010804 	.word	0x40010804
 8000270:	40010c00 	.word	0x40010c00
 8000274:	40010c04 	.word	0x40010c04
 8000278:	40011000 	.word	0x40011000
 800027c:	40011004 	.word	0x40011004

08000280 <DIO_voidSetPortnDirection>:
void	DIO_voidSetPortnDirection(u8 port, u8 Direction)
{
 8000280:	b480      	push	{r7}
 8000282:	b083      	sub	sp, #12
 8000284:	af00      	add	r7, sp, #0
 8000286:	4603      	mov	r3, r0
 8000288:	460a      	mov	r2, r1
 800028a:	71fb      	strb	r3, [r7, #7]
 800028c:	4613      	mov	r3, r2
 800028e:	71bb      	strb	r3, [r7, #6]
	switch (port)
 8000290:	79fb      	ldrb	r3, [r7, #7]
 8000292:	2b02      	cmp	r3, #2
 8000294:	f000 8086 	beq.w	80003a4 <DIO_voidSetPortnDirection+0x124>
 8000298:	2b02      	cmp	r3, #2
 800029a:	f300 80c2 	bgt.w	8000422 <DIO_voidSetPortnDirection+0x1a2>
 800029e:	2b00      	cmp	r3, #0
 80002a0:	d002      	beq.n	80002a8 <DIO_voidSetPortnDirection+0x28>
 80002a2:	2b01      	cmp	r3, #1
 80002a4:	d03f      	beq.n	8000326 <DIO_voidSetPortnDirection+0xa6>
				GPIOC_CRH &= MASK_32BIT;
				GPIOC_CRH ^= ((Direction<<0) | (Direction<<1*4) | (Direction<<2*4) | (Direction<<3*4) | (Direction<<4*4)
						   | (Direction<<5*4) | (Direction<<6*4) | (Direction<<7*4));
				break;
		}
}
 80002a6:	e0bc      	b.n	8000422 <DIO_voidSetPortnDirection+0x1a2>
				GPIOA_CRL &= MASK_32BIT;
 80002a8:	4b60      	ldr	r3, [pc, #384]	; (800042c <DIO_voidSetPortnDirection+0x1ac>)
 80002aa:	2200      	movs	r2, #0
 80002ac:	601a      	str	r2, [r3, #0]
				GPIOA_CRL ^= ((Direction<<0) | (Direction<<1*4) | (Direction<<2*4) | (Direction<<3*4) | (Direction<<4*4)
 80002ae:	4b5f      	ldr	r3, [pc, #380]	; (800042c <DIO_voidSetPortnDirection+0x1ac>)
 80002b0:	681b      	ldr	r3, [r3, #0]
 80002b2:	79b9      	ldrb	r1, [r7, #6]
 80002b4:	79ba      	ldrb	r2, [r7, #6]
 80002b6:	0112      	lsls	r2, r2, #4
 80002b8:	4311      	orrs	r1, r2
 80002ba:	79ba      	ldrb	r2, [r7, #6]
 80002bc:	0212      	lsls	r2, r2, #8
 80002be:	4311      	orrs	r1, r2
 80002c0:	79ba      	ldrb	r2, [r7, #6]
 80002c2:	0312      	lsls	r2, r2, #12
 80002c4:	4311      	orrs	r1, r2
 80002c6:	79ba      	ldrb	r2, [r7, #6]
 80002c8:	0412      	lsls	r2, r2, #16
 80002ca:	4311      	orrs	r1, r2
						   | (Direction<<5*4) | (Direction<<6*4) | (Direction<<7*4));
 80002cc:	79ba      	ldrb	r2, [r7, #6]
 80002ce:	0512      	lsls	r2, r2, #20
 80002d0:	4311      	orrs	r1, r2
 80002d2:	79ba      	ldrb	r2, [r7, #6]
 80002d4:	0612      	lsls	r2, r2, #24
 80002d6:	4311      	orrs	r1, r2
 80002d8:	79ba      	ldrb	r2, [r7, #6]
 80002da:	0712      	lsls	r2, r2, #28
 80002dc:	430a      	orrs	r2, r1
 80002de:	4611      	mov	r1, r2
				GPIOA_CRL ^= ((Direction<<0) | (Direction<<1*4) | (Direction<<2*4) | (Direction<<3*4) | (Direction<<4*4)
 80002e0:	4a52      	ldr	r2, [pc, #328]	; (800042c <DIO_voidSetPortnDirection+0x1ac>)
 80002e2:	404b      	eors	r3, r1
 80002e4:	6013      	str	r3, [r2, #0]
				GPIOA_CRH &= MASK_32BIT;
 80002e6:	4b52      	ldr	r3, [pc, #328]	; (8000430 <DIO_voidSetPortnDirection+0x1b0>)
 80002e8:	2200      	movs	r2, #0
 80002ea:	601a      	str	r2, [r3, #0]
				GPIOA_CRH ^= ((Direction<<0) | (Direction<<1*4) | (Direction<<2*4) | (Direction<<3*4) | (Direction<<4*4)
 80002ec:	4b50      	ldr	r3, [pc, #320]	; (8000430 <DIO_voidSetPortnDirection+0x1b0>)
 80002ee:	681b      	ldr	r3, [r3, #0]
 80002f0:	79b9      	ldrb	r1, [r7, #6]
 80002f2:	79ba      	ldrb	r2, [r7, #6]
 80002f4:	0112      	lsls	r2, r2, #4
 80002f6:	4311      	orrs	r1, r2
 80002f8:	79ba      	ldrb	r2, [r7, #6]
 80002fa:	0212      	lsls	r2, r2, #8
 80002fc:	4311      	orrs	r1, r2
 80002fe:	79ba      	ldrb	r2, [r7, #6]
 8000300:	0312      	lsls	r2, r2, #12
 8000302:	4311      	orrs	r1, r2
 8000304:	79ba      	ldrb	r2, [r7, #6]
 8000306:	0412      	lsls	r2, r2, #16
 8000308:	4311      	orrs	r1, r2
						   | (Direction<<5*4) | (Direction<<6*4) | (Direction<<7*4));
 800030a:	79ba      	ldrb	r2, [r7, #6]
 800030c:	0512      	lsls	r2, r2, #20
 800030e:	4311      	orrs	r1, r2
 8000310:	79ba      	ldrb	r2, [r7, #6]
 8000312:	0612      	lsls	r2, r2, #24
 8000314:	4311      	orrs	r1, r2
 8000316:	79ba      	ldrb	r2, [r7, #6]
 8000318:	0712      	lsls	r2, r2, #28
 800031a:	430a      	orrs	r2, r1
 800031c:	4611      	mov	r1, r2
				GPIOA_CRH ^= ((Direction<<0) | (Direction<<1*4) | (Direction<<2*4) | (Direction<<3*4) | (Direction<<4*4)
 800031e:	4a44      	ldr	r2, [pc, #272]	; (8000430 <DIO_voidSetPortnDirection+0x1b0>)
 8000320:	404b      	eors	r3, r1
 8000322:	6013      	str	r3, [r2, #0]
				break;
 8000324:	e07d      	b.n	8000422 <DIO_voidSetPortnDirection+0x1a2>
				GPIOB_CRL &= MASK_32BIT;
 8000326:	4b43      	ldr	r3, [pc, #268]	; (8000434 <DIO_voidSetPortnDirection+0x1b4>)
 8000328:	2200      	movs	r2, #0
 800032a:	601a      	str	r2, [r3, #0]
				GPIOB_CRL ^= ((Direction<<0) | (Direction<<1*4) | (Direction<<2*4) | (Direction<<3*4) | (Direction<<4*4)
 800032c:	4b41      	ldr	r3, [pc, #260]	; (8000434 <DIO_voidSetPortnDirection+0x1b4>)
 800032e:	681b      	ldr	r3, [r3, #0]
 8000330:	79b9      	ldrb	r1, [r7, #6]
 8000332:	79ba      	ldrb	r2, [r7, #6]
 8000334:	0112      	lsls	r2, r2, #4
 8000336:	4311      	orrs	r1, r2
 8000338:	79ba      	ldrb	r2, [r7, #6]
 800033a:	0212      	lsls	r2, r2, #8
 800033c:	4311      	orrs	r1, r2
 800033e:	79ba      	ldrb	r2, [r7, #6]
 8000340:	0312      	lsls	r2, r2, #12
 8000342:	4311      	orrs	r1, r2
 8000344:	79ba      	ldrb	r2, [r7, #6]
 8000346:	0412      	lsls	r2, r2, #16
 8000348:	4311      	orrs	r1, r2
						   | (Direction<<5*4) | (Direction<<6*4) | (Direction<<7*4));
 800034a:	79ba      	ldrb	r2, [r7, #6]
 800034c:	0512      	lsls	r2, r2, #20
 800034e:	4311      	orrs	r1, r2
 8000350:	79ba      	ldrb	r2, [r7, #6]
 8000352:	0612      	lsls	r2, r2, #24
 8000354:	4311      	orrs	r1, r2
 8000356:	79ba      	ldrb	r2, [r7, #6]
 8000358:	0712      	lsls	r2, r2, #28
 800035a:	430a      	orrs	r2, r1
 800035c:	4611      	mov	r1, r2
				GPIOB_CRL ^= ((Direction<<0) | (Direction<<1*4) | (Direction<<2*4) | (Direction<<3*4) | (Direction<<4*4)
 800035e:	4a35      	ldr	r2, [pc, #212]	; (8000434 <DIO_voidSetPortnDirection+0x1b4>)
 8000360:	404b      	eors	r3, r1
 8000362:	6013      	str	r3, [r2, #0]
				GPIOB_CRH &= MASK_32BIT;
 8000364:	4b34      	ldr	r3, [pc, #208]	; (8000438 <DIO_voidSetPortnDirection+0x1b8>)
 8000366:	2200      	movs	r2, #0
 8000368:	601a      	str	r2, [r3, #0]
				GPIOB_CRH ^= ((Direction<<0) | (Direction<<1*4) | (Direction<<2*4) | (Direction<<3*4) | (Direction<<4*4)
 800036a:	4b33      	ldr	r3, [pc, #204]	; (8000438 <DIO_voidSetPortnDirection+0x1b8>)
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	79b9      	ldrb	r1, [r7, #6]
 8000370:	79ba      	ldrb	r2, [r7, #6]
 8000372:	0112      	lsls	r2, r2, #4
 8000374:	4311      	orrs	r1, r2
 8000376:	79ba      	ldrb	r2, [r7, #6]
 8000378:	0212      	lsls	r2, r2, #8
 800037a:	4311      	orrs	r1, r2
 800037c:	79ba      	ldrb	r2, [r7, #6]
 800037e:	0312      	lsls	r2, r2, #12
 8000380:	4311      	orrs	r1, r2
 8000382:	79ba      	ldrb	r2, [r7, #6]
 8000384:	0412      	lsls	r2, r2, #16
 8000386:	4311      	orrs	r1, r2
						   | (Direction<<5*4) | (Direction<<6*4) | (Direction<<7*4));
 8000388:	79ba      	ldrb	r2, [r7, #6]
 800038a:	0512      	lsls	r2, r2, #20
 800038c:	4311      	orrs	r1, r2
 800038e:	79ba      	ldrb	r2, [r7, #6]
 8000390:	0612      	lsls	r2, r2, #24
 8000392:	4311      	orrs	r1, r2
 8000394:	79ba      	ldrb	r2, [r7, #6]
 8000396:	0712      	lsls	r2, r2, #28
 8000398:	430a      	orrs	r2, r1
 800039a:	4611      	mov	r1, r2
				GPIOB_CRH ^= ((Direction<<0) | (Direction<<1*4) | (Direction<<2*4) | (Direction<<3*4) | (Direction<<4*4)
 800039c:	4a26      	ldr	r2, [pc, #152]	; (8000438 <DIO_voidSetPortnDirection+0x1b8>)
 800039e:	404b      	eors	r3, r1
 80003a0:	6013      	str	r3, [r2, #0]
				break;
 80003a2:	e03e      	b.n	8000422 <DIO_voidSetPortnDirection+0x1a2>
				GPIOC_CRL &= MASK_32BIT;
 80003a4:	4b25      	ldr	r3, [pc, #148]	; (800043c <DIO_voidSetPortnDirection+0x1bc>)
 80003a6:	2200      	movs	r2, #0
 80003a8:	601a      	str	r2, [r3, #0]
				GPIOC_CRL ^= ((Direction<<0) | (Direction<<1*4) | (Direction<<2*4) | (Direction<<3*4) | (Direction<<4*4)
 80003aa:	4b24      	ldr	r3, [pc, #144]	; (800043c <DIO_voidSetPortnDirection+0x1bc>)
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	79b9      	ldrb	r1, [r7, #6]
 80003b0:	79ba      	ldrb	r2, [r7, #6]
 80003b2:	0112      	lsls	r2, r2, #4
 80003b4:	4311      	orrs	r1, r2
 80003b6:	79ba      	ldrb	r2, [r7, #6]
 80003b8:	0212      	lsls	r2, r2, #8
 80003ba:	4311      	orrs	r1, r2
 80003bc:	79ba      	ldrb	r2, [r7, #6]
 80003be:	0312      	lsls	r2, r2, #12
 80003c0:	4311      	orrs	r1, r2
 80003c2:	79ba      	ldrb	r2, [r7, #6]
 80003c4:	0412      	lsls	r2, r2, #16
 80003c6:	4311      	orrs	r1, r2
						   | (Direction<<5*4) | (Direction<<6*4) | (Direction<<7*4));
 80003c8:	79ba      	ldrb	r2, [r7, #6]
 80003ca:	0512      	lsls	r2, r2, #20
 80003cc:	4311      	orrs	r1, r2
 80003ce:	79ba      	ldrb	r2, [r7, #6]
 80003d0:	0612      	lsls	r2, r2, #24
 80003d2:	4311      	orrs	r1, r2
 80003d4:	79ba      	ldrb	r2, [r7, #6]
 80003d6:	0712      	lsls	r2, r2, #28
 80003d8:	430a      	orrs	r2, r1
 80003da:	4611      	mov	r1, r2
				GPIOC_CRL ^= ((Direction<<0) | (Direction<<1*4) | (Direction<<2*4) | (Direction<<3*4) | (Direction<<4*4)
 80003dc:	4a17      	ldr	r2, [pc, #92]	; (800043c <DIO_voidSetPortnDirection+0x1bc>)
 80003de:	404b      	eors	r3, r1
 80003e0:	6013      	str	r3, [r2, #0]
				GPIOC_CRH &= MASK_32BIT;
 80003e2:	4b17      	ldr	r3, [pc, #92]	; (8000440 <DIO_voidSetPortnDirection+0x1c0>)
 80003e4:	2200      	movs	r2, #0
 80003e6:	601a      	str	r2, [r3, #0]
				GPIOC_CRH ^= ((Direction<<0) | (Direction<<1*4) | (Direction<<2*4) | (Direction<<3*4) | (Direction<<4*4)
 80003e8:	4b15      	ldr	r3, [pc, #84]	; (8000440 <DIO_voidSetPortnDirection+0x1c0>)
 80003ea:	681b      	ldr	r3, [r3, #0]
 80003ec:	79b9      	ldrb	r1, [r7, #6]
 80003ee:	79ba      	ldrb	r2, [r7, #6]
 80003f0:	0112      	lsls	r2, r2, #4
 80003f2:	4311      	orrs	r1, r2
 80003f4:	79ba      	ldrb	r2, [r7, #6]
 80003f6:	0212      	lsls	r2, r2, #8
 80003f8:	4311      	orrs	r1, r2
 80003fa:	79ba      	ldrb	r2, [r7, #6]
 80003fc:	0312      	lsls	r2, r2, #12
 80003fe:	4311      	orrs	r1, r2
 8000400:	79ba      	ldrb	r2, [r7, #6]
 8000402:	0412      	lsls	r2, r2, #16
 8000404:	4311      	orrs	r1, r2
						   | (Direction<<5*4) | (Direction<<6*4) | (Direction<<7*4));
 8000406:	79ba      	ldrb	r2, [r7, #6]
 8000408:	0512      	lsls	r2, r2, #20
 800040a:	4311      	orrs	r1, r2
 800040c:	79ba      	ldrb	r2, [r7, #6]
 800040e:	0612      	lsls	r2, r2, #24
 8000410:	4311      	orrs	r1, r2
 8000412:	79ba      	ldrb	r2, [r7, #6]
 8000414:	0712      	lsls	r2, r2, #28
 8000416:	430a      	orrs	r2, r1
 8000418:	4611      	mov	r1, r2
				GPIOC_CRH ^= ((Direction<<0) | (Direction<<1*4) | (Direction<<2*4) | (Direction<<3*4) | (Direction<<4*4)
 800041a:	4a09      	ldr	r2, [pc, #36]	; (8000440 <DIO_voidSetPortnDirection+0x1c0>)
 800041c:	404b      	eors	r3, r1
 800041e:	6013      	str	r3, [r2, #0]
				break;
 8000420:	bf00      	nop
}
 8000422:	bf00      	nop
 8000424:	370c      	adds	r7, #12
 8000426:	46bd      	mov	sp, r7
 8000428:	bc80      	pop	{r7}
 800042a:	4770      	bx	lr
 800042c:	40010800 	.word	0x40010800
 8000430:	40010804 	.word	0x40010804
 8000434:	40010c00 	.word	0x40010c00
 8000438:	40010c04 	.word	0x40010c04
 800043c:	40011000 	.word	0x40011000
 8000440:	40011004 	.word	0x40011004

08000444 <DIO_voidSetPORTValue>:

void DIO_voidSetPORTValue(u8 port, uint16 Value)
{
 8000444:	b480      	push	{r7}
 8000446:	b083      	sub	sp, #12
 8000448:	af00      	add	r7, sp, #0
 800044a:	4603      	mov	r3, r0
 800044c:	460a      	mov	r2, r1
 800044e:	71fb      	strb	r3, [r7, #7]
 8000450:	4613      	mov	r3, r2
 8000452:	80bb      	strh	r3, [r7, #4]
	switch(port)
 8000454:	79fb      	ldrb	r3, [r7, #7]
 8000456:	2b02      	cmp	r3, #2
 8000458:	d01a      	beq.n	8000490 <DIO_voidSetPORTValue+0x4c>
 800045a:	2b02      	cmp	r3, #2
 800045c:	dc22      	bgt.n	80004a4 <DIO_voidSetPORTValue+0x60>
 800045e:	2b00      	cmp	r3, #0
 8000460:	d002      	beq.n	8000468 <DIO_voidSetPORTValue+0x24>
 8000462:	2b01      	cmp	r3, #1
 8000464:	d00a      	beq.n	800047c <DIO_voidSetPORTValue+0x38>
			GPIOC_ODR = 0;
			GPIOC_ODR |= Value;
			break;

	}
}
 8000466:	e01d      	b.n	80004a4 <DIO_voidSetPORTValue+0x60>
			GPIOA_ODR = 0;
 8000468:	4b11      	ldr	r3, [pc, #68]	; (80004b0 <DIO_voidSetPORTValue+0x6c>)
 800046a:	2200      	movs	r2, #0
 800046c:	601a      	str	r2, [r3, #0]
			GPIOA_ODR |= Value;
 800046e:	4b10      	ldr	r3, [pc, #64]	; (80004b0 <DIO_voidSetPORTValue+0x6c>)
 8000470:	681a      	ldr	r2, [r3, #0]
 8000472:	88bb      	ldrh	r3, [r7, #4]
 8000474:	490e      	ldr	r1, [pc, #56]	; (80004b0 <DIO_voidSetPORTValue+0x6c>)
 8000476:	4313      	orrs	r3, r2
 8000478:	600b      	str	r3, [r1, #0]
			break;
 800047a:	e013      	b.n	80004a4 <DIO_voidSetPORTValue+0x60>
			GPIOB_ODR = 0;
 800047c:	4b0d      	ldr	r3, [pc, #52]	; (80004b4 <DIO_voidSetPORTValue+0x70>)
 800047e:	2200      	movs	r2, #0
 8000480:	601a      	str	r2, [r3, #0]
			GPIOB_ODR |= Value;
 8000482:	4b0c      	ldr	r3, [pc, #48]	; (80004b4 <DIO_voidSetPORTValue+0x70>)
 8000484:	681a      	ldr	r2, [r3, #0]
 8000486:	88bb      	ldrh	r3, [r7, #4]
 8000488:	490a      	ldr	r1, [pc, #40]	; (80004b4 <DIO_voidSetPORTValue+0x70>)
 800048a:	4313      	orrs	r3, r2
 800048c:	600b      	str	r3, [r1, #0]
			break;
 800048e:	e009      	b.n	80004a4 <DIO_voidSetPORTValue+0x60>
			GPIOC_ODR = 0;
 8000490:	4b09      	ldr	r3, [pc, #36]	; (80004b8 <DIO_voidSetPORTValue+0x74>)
 8000492:	2200      	movs	r2, #0
 8000494:	601a      	str	r2, [r3, #0]
			GPIOC_ODR |= Value;
 8000496:	4b08      	ldr	r3, [pc, #32]	; (80004b8 <DIO_voidSetPORTValue+0x74>)
 8000498:	681a      	ldr	r2, [r3, #0]
 800049a:	88bb      	ldrh	r3, [r7, #4]
 800049c:	4906      	ldr	r1, [pc, #24]	; (80004b8 <DIO_voidSetPORTValue+0x74>)
 800049e:	4313      	orrs	r3, r2
 80004a0:	600b      	str	r3, [r1, #0]
			break;
 80004a2:	bf00      	nop
}
 80004a4:	bf00      	nop
 80004a6:	370c      	adds	r7, #12
 80004a8:	46bd      	mov	sp, r7
 80004aa:	bc80      	pop	{r7}
 80004ac:	4770      	bx	lr
 80004ae:	bf00      	nop
 80004b0:	4001080c 	.word	0x4001080c
 80004b4:	40010c0c 	.word	0x40010c0c
 80004b8:	4001100c 	.word	0x4001100c

080004bc <DIO_voidSetPinValue>:


void DIO_voidSetPinValue(u8 port, u8 pin, u8 Value)
{
 80004bc:	b480      	push	{r7}
 80004be:	b083      	sub	sp, #12
 80004c0:	af00      	add	r7, sp, #0
 80004c2:	4603      	mov	r3, r0
 80004c4:	71fb      	strb	r3, [r7, #7]
 80004c6:	460b      	mov	r3, r1
 80004c8:	71bb      	strb	r3, [r7, #6]
 80004ca:	4613      	mov	r3, r2
 80004cc:	717b      	strb	r3, [r7, #5]
	switch(port)
 80004ce:	79fb      	ldrb	r3, [r7, #7]
 80004d0:	2b02      	cmp	r3, #2
 80004d2:	d042      	beq.n	800055a <DIO_voidSetPinValue+0x9e>
 80004d4:	2b02      	cmp	r3, #2
 80004d6:	dc5e      	bgt.n	8000596 <DIO_voidSetPinValue+0xda>
 80004d8:	2b00      	cmp	r3, #0
 80004da:	d002      	beq.n	80004e2 <DIO_voidSetPinValue+0x26>
 80004dc:	2b01      	cmp	r3, #1
 80004de:	d01e      	beq.n	800051e <DIO_voidSetPinValue+0x62>
					break;
			}
			break;

	}
}
 80004e0:	e059      	b.n	8000596 <DIO_voidSetPinValue+0xda>
			switch(Value)
 80004e2:	797b      	ldrb	r3, [r7, #5]
 80004e4:	2b00      	cmp	r3, #0
 80004e6:	d002      	beq.n	80004ee <DIO_voidSetPinValue+0x32>
 80004e8:	2b01      	cmp	r3, #1
 80004ea:	d00c      	beq.n	8000506 <DIO_voidSetPinValue+0x4a>
			break;
 80004ec:	e053      	b.n	8000596 <DIO_voidSetPinValue+0xda>
					CLEAR_BIT(GPIOA_ODR, pin);
 80004ee:	4b2c      	ldr	r3, [pc, #176]	; (80005a0 <DIO_voidSetPinValue+0xe4>)
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	79ba      	ldrb	r2, [r7, #6]
 80004f4:	2101      	movs	r1, #1
 80004f6:	fa01 f202 	lsl.w	r2, r1, r2
 80004fa:	43d2      	mvns	r2, r2
 80004fc:	4611      	mov	r1, r2
 80004fe:	4a28      	ldr	r2, [pc, #160]	; (80005a0 <DIO_voidSetPinValue+0xe4>)
 8000500:	400b      	ands	r3, r1
 8000502:	6013      	str	r3, [r2, #0]
					break;
 8000504:	e00a      	b.n	800051c <DIO_voidSetPinValue+0x60>
					SET_BIT(GPIOA_ODR, pin);
 8000506:	4b26      	ldr	r3, [pc, #152]	; (80005a0 <DIO_voidSetPinValue+0xe4>)
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	79ba      	ldrb	r2, [r7, #6]
 800050c:	2101      	movs	r1, #1
 800050e:	fa01 f202 	lsl.w	r2, r1, r2
 8000512:	4611      	mov	r1, r2
 8000514:	4a22      	ldr	r2, [pc, #136]	; (80005a0 <DIO_voidSetPinValue+0xe4>)
 8000516:	430b      	orrs	r3, r1
 8000518:	6013      	str	r3, [r2, #0]
					break;
 800051a:	bf00      	nop
			break;
 800051c:	e03b      	b.n	8000596 <DIO_voidSetPinValue+0xda>
			switch(Value)
 800051e:	797b      	ldrb	r3, [r7, #5]
 8000520:	2b00      	cmp	r3, #0
 8000522:	d002      	beq.n	800052a <DIO_voidSetPinValue+0x6e>
 8000524:	2b01      	cmp	r3, #1
 8000526:	d00c      	beq.n	8000542 <DIO_voidSetPinValue+0x86>
			break;
 8000528:	e035      	b.n	8000596 <DIO_voidSetPinValue+0xda>
					CLEAR_BIT(GPIOB_ODR, pin);
 800052a:	4b1e      	ldr	r3, [pc, #120]	; (80005a4 <DIO_voidSetPinValue+0xe8>)
 800052c:	681b      	ldr	r3, [r3, #0]
 800052e:	79ba      	ldrb	r2, [r7, #6]
 8000530:	2101      	movs	r1, #1
 8000532:	fa01 f202 	lsl.w	r2, r1, r2
 8000536:	43d2      	mvns	r2, r2
 8000538:	4611      	mov	r1, r2
 800053a:	4a1a      	ldr	r2, [pc, #104]	; (80005a4 <DIO_voidSetPinValue+0xe8>)
 800053c:	400b      	ands	r3, r1
 800053e:	6013      	str	r3, [r2, #0]
					break;
 8000540:	e00a      	b.n	8000558 <DIO_voidSetPinValue+0x9c>
					SET_BIT(GPIOB_ODR, pin);
 8000542:	4b18      	ldr	r3, [pc, #96]	; (80005a4 <DIO_voidSetPinValue+0xe8>)
 8000544:	681b      	ldr	r3, [r3, #0]
 8000546:	79ba      	ldrb	r2, [r7, #6]
 8000548:	2101      	movs	r1, #1
 800054a:	fa01 f202 	lsl.w	r2, r1, r2
 800054e:	4611      	mov	r1, r2
 8000550:	4a14      	ldr	r2, [pc, #80]	; (80005a4 <DIO_voidSetPinValue+0xe8>)
 8000552:	430b      	orrs	r3, r1
 8000554:	6013      	str	r3, [r2, #0]
					break;
 8000556:	bf00      	nop
			break;
 8000558:	e01d      	b.n	8000596 <DIO_voidSetPinValue+0xda>
			switch(Value)
 800055a:	797b      	ldrb	r3, [r7, #5]
 800055c:	2b00      	cmp	r3, #0
 800055e:	d002      	beq.n	8000566 <DIO_voidSetPinValue+0xaa>
 8000560:	2b01      	cmp	r3, #1
 8000562:	d00c      	beq.n	800057e <DIO_voidSetPinValue+0xc2>
			break;
 8000564:	e016      	b.n	8000594 <DIO_voidSetPinValue+0xd8>
					CLEAR_BIT(GPIOC_IDR, pin);
 8000566:	4b10      	ldr	r3, [pc, #64]	; (80005a8 <DIO_voidSetPinValue+0xec>)
 8000568:	681b      	ldr	r3, [r3, #0]
 800056a:	79ba      	ldrb	r2, [r7, #6]
 800056c:	2101      	movs	r1, #1
 800056e:	fa01 f202 	lsl.w	r2, r1, r2
 8000572:	43d2      	mvns	r2, r2
 8000574:	4611      	mov	r1, r2
 8000576:	4a0c      	ldr	r2, [pc, #48]	; (80005a8 <DIO_voidSetPinValue+0xec>)
 8000578:	400b      	ands	r3, r1
 800057a:	6013      	str	r3, [r2, #0]
					break;
 800057c:	e00a      	b.n	8000594 <DIO_voidSetPinValue+0xd8>
					SET_BIT(GPIOC_IDR, pin);
 800057e:	4b0a      	ldr	r3, [pc, #40]	; (80005a8 <DIO_voidSetPinValue+0xec>)
 8000580:	681b      	ldr	r3, [r3, #0]
 8000582:	79ba      	ldrb	r2, [r7, #6]
 8000584:	2101      	movs	r1, #1
 8000586:	fa01 f202 	lsl.w	r2, r1, r2
 800058a:	4611      	mov	r1, r2
 800058c:	4a06      	ldr	r2, [pc, #24]	; (80005a8 <DIO_voidSetPinValue+0xec>)
 800058e:	430b      	orrs	r3, r1
 8000590:	6013      	str	r3, [r2, #0]
					break;
 8000592:	bf00      	nop
			break;
 8000594:	bf00      	nop
}
 8000596:	bf00      	nop
 8000598:	370c      	adds	r7, #12
 800059a:	46bd      	mov	sp, r7
 800059c:	bc80      	pop	{r7}
 800059e:	4770      	bx	lr
 80005a0:	4001080c 	.word	0x4001080c
 80005a4:	40010c0c 	.word	0x40010c0c
 80005a8:	40011008 	.word	0x40011008

080005ac <MRCC_voidInit>:
/*					 Inputs : void 								*/
/*					 return : void		 						*/
/****************************************************************/

void MRCC_voidInit(void)
{
 80005ac:	b480      	push	{r7}
 80005ae:	af00      	add	r7, sp, #0
	
		
		#if 	CLOCK_TYPE == HSI
		               /* internal 8 MHZ RC oscillator  */
	 	 	 	SET_BIT(MRCC->CR,CR_HSION );          /*	HSI clock enable	*/
 80005b0:	4b0e      	ldr	r3, [pc, #56]	; (80005ec <MRCC_voidInit+0x40>)
 80005b2:	681b      	ldr	r3, [r3, #0]
 80005b4:	4a0d      	ldr	r2, [pc, #52]	; (80005ec <MRCC_voidInit+0x40>)
 80005b6:	f043 0301 	orr.w	r3, r3, #1
 80005ba:	6013      	str	r3, [r2, #0]
				
				while(GET_BIT(MRCC->CR,CR_HSIRDY)==0);/*	HSI Ready Flag		        */
 80005bc:	bf00      	nop
 80005be:	4b0b      	ldr	r3, [pc, #44]	; (80005ec <MRCC_voidInit+0x40>)
 80005c0:	681b      	ldr	r3, [r3, #0]
 80005c2:	f003 0302 	and.w	r3, r3, #2
 80005c6:	2b00      	cmp	r3, #0
 80005c8:	d0f9      	beq.n	80005be <MRCC_voidInit+0x12>

				CLEAR_BIT(MRCC->CFGR,0);              /*HSI selected as system clock ---sw */
 80005ca:	4b08      	ldr	r3, [pc, #32]	; (80005ec <MRCC_voidInit+0x40>)
 80005cc:	685b      	ldr	r3, [r3, #4]
 80005ce:	4a07      	ldr	r2, [pc, #28]	; (80005ec <MRCC_voidInit+0x40>)
 80005d0:	f023 0301 	bic.w	r3, r3, #1
 80005d4:	6053      	str	r3, [r2, #4]
				CLEAR_BIT(MRCC->CFGR,1);
 80005d6:	4b05      	ldr	r3, [pc, #20]	; (80005ec <MRCC_voidInit+0x40>)
 80005d8:	685b      	ldr	r3, [r3, #4]
 80005da:	4a04      	ldr	r2, [pc, #16]	; (80005ec <MRCC_voidInit+0x40>)
 80005dc:	f023 0302 	bic.w	r3, r3, #2
 80005e0:	6053      	str	r3, [r2, #4]
				
		#else
				#warning	"Wrong clock security system configuration choice!"
		#endif
		
}
 80005e2:	bf00      	nop
 80005e4:	46bd      	mov	sp, r7
 80005e6:	bc80      	pop	{r7}
 80005e8:	4770      	bx	lr
 80005ea:	bf00      	nop
 80005ec:	40021000 	.word	0x40021000

080005f0 <MRCC_enumSetPeripheralClock>:

ErrorStatus MRCC_enumSetPeripheralClock(u8 Copy_u8PeripheralBus , u8 Copy_u8PeripheralName , u8 Copy_u8PeripheralState )
{
 80005f0:	b480      	push	{r7}
 80005f2:	b085      	sub	sp, #20
 80005f4:	af00      	add	r7, sp, #0
 80005f6:	4603      	mov	r3, r0
 80005f8:	71fb      	strb	r3, [r7, #7]
 80005fa:	460b      	mov	r3, r1
 80005fc:	71bb      	strb	r3, [r7, #6]
 80005fe:	4613      	mov	r3, r2
 8000600:	717b      	strb	r3, [r7, #5]
	ErrorStatus	LOC_enumstate = ES_OK ;
 8000602:	2301      	movs	r3, #1
 8000604:	73fb      	strb	r3, [r7, #15]
	switch( Copy_u8PeripheralState )
 8000606:	797b      	ldrb	r3, [r7, #5]
 8000608:	2b03      	cmp	r3, #3
 800060a:	d063      	beq.n	80006d4 <MRCC_enumSetPeripheralClock+0xe4>
 800060c:	2b03      	cmp	r3, #3
 800060e:	dc7e      	bgt.n	800070e <MRCC_enumSetPeripheralClock+0x11e>
 8000610:	2b01      	cmp	r3, #1
 8000612:	d002      	beq.n	800061a <MRCC_enumSetPeripheralClock+0x2a>
 8000614:	2b02      	cmp	r3, #2
 8000616:	d02d      	beq.n	8000674 <MRCC_enumSetPeripheralClock+0x84>
 8000618:	e079      	b.n	800070e <MRCC_enumSetPeripheralClock+0x11e>
	{
		case	RCC_ENABLE 	:
							switch( Copy_u8PeripheralBus )
 800061a:	79fb      	ldrb	r3, [r7, #7]
 800061c:	2b03      	cmp	r3, #3
 800061e:	d01c      	beq.n	800065a <MRCC_enumSetPeripheralClock+0x6a>
 8000620:	2b03      	cmp	r3, #3
 8000622:	dc25      	bgt.n	8000670 <MRCC_enumSetPeripheralClock+0x80>
 8000624:	2b01      	cmp	r3, #1
 8000626:	d002      	beq.n	800062e <MRCC_enumSetPeripheralClock+0x3e>
 8000628:	2b02      	cmp	r3, #2
 800062a:	d00b      	beq.n	8000644 <MRCC_enumSetPeripheralClock+0x54>
							{	
								case AHB  :	SET_BIT( MRCC->AHBENR  , Copy_u8PeripheralName  );break;
								case APB1 :	SET_BIT( MRCC->APB1ENR , Copy_u8PeripheralName  );break;
								case APB2 : SET_BIT(MRCC->APB2ENR  , Copy_u8PeripheralName  );break;
								default	  :	break;
 800062c:	e020      	b.n	8000670 <MRCC_enumSetPeripheralClock+0x80>
								case AHB  :	SET_BIT( MRCC->AHBENR  , Copy_u8PeripheralName  );break;
 800062e:	4b3b      	ldr	r3, [pc, #236]	; (800071c <MRCC_enumSetPeripheralClock+0x12c>)
 8000630:	695b      	ldr	r3, [r3, #20]
 8000632:	79ba      	ldrb	r2, [r7, #6]
 8000634:	2101      	movs	r1, #1
 8000636:	fa01 f202 	lsl.w	r2, r1, r2
 800063a:	4611      	mov	r1, r2
 800063c:	4a37      	ldr	r2, [pc, #220]	; (800071c <MRCC_enumSetPeripheralClock+0x12c>)
 800063e:	430b      	orrs	r3, r1
 8000640:	6153      	str	r3, [r2, #20]
 8000642:	e016      	b.n	8000672 <MRCC_enumSetPeripheralClock+0x82>
								case APB1 :	SET_BIT( MRCC->APB1ENR , Copy_u8PeripheralName  );break;
 8000644:	4b35      	ldr	r3, [pc, #212]	; (800071c <MRCC_enumSetPeripheralClock+0x12c>)
 8000646:	69db      	ldr	r3, [r3, #28]
 8000648:	79ba      	ldrb	r2, [r7, #6]
 800064a:	2101      	movs	r1, #1
 800064c:	fa01 f202 	lsl.w	r2, r1, r2
 8000650:	4611      	mov	r1, r2
 8000652:	4a32      	ldr	r2, [pc, #200]	; (800071c <MRCC_enumSetPeripheralClock+0x12c>)
 8000654:	430b      	orrs	r3, r1
 8000656:	61d3      	str	r3, [r2, #28]
 8000658:	e00b      	b.n	8000672 <MRCC_enumSetPeripheralClock+0x82>
								case APB2 : SET_BIT(MRCC->APB2ENR  , Copy_u8PeripheralName  );break;
 800065a:	4b30      	ldr	r3, [pc, #192]	; (800071c <MRCC_enumSetPeripheralClock+0x12c>)
 800065c:	699b      	ldr	r3, [r3, #24]
 800065e:	79ba      	ldrb	r2, [r7, #6]
 8000660:	2101      	movs	r1, #1
 8000662:	fa01 f202 	lsl.w	r2, r1, r2
 8000666:	4611      	mov	r1, r2
 8000668:	4a2c      	ldr	r2, [pc, #176]	; (800071c <MRCC_enumSetPeripheralClock+0x12c>)
 800066a:	430b      	orrs	r3, r1
 800066c:	6193      	str	r3, [r2, #24]
 800066e:	e000      	b.n	8000672 <MRCC_enumSetPeripheralClock+0x82>
								default	  :	break;
 8000670:	bf00      	nop
							}
							break;
 8000672:	e04c      	b.n	800070e <MRCC_enumSetPeripheralClock+0x11e>
		case	RCC_DISABLE :	
							switch( Copy_u8PeripheralBus )
 8000674:	79fb      	ldrb	r3, [r7, #7]
 8000676:	2b03      	cmp	r3, #3
 8000678:	d01e      	beq.n	80006b8 <MRCC_enumSetPeripheralClock+0xc8>
 800067a:	2b03      	cmp	r3, #3
 800067c:	dc28      	bgt.n	80006d0 <MRCC_enumSetPeripheralClock+0xe0>
 800067e:	2b01      	cmp	r3, #1
 8000680:	d002      	beq.n	8000688 <MRCC_enumSetPeripheralClock+0x98>
 8000682:	2b02      	cmp	r3, #2
 8000684:	d00c      	beq.n	80006a0 <MRCC_enumSetPeripheralClock+0xb0>
								case APB1 :	CLEAR_BIT(  MRCC->APB1ENR , Copy_u8PeripheralName );
								break;
								case APB2 : CLEAR_BIT( MRCC->APB2ENR  , Copy_u8PeripheralName  );
								break;
								default	  :	
								break;
 8000686:	e023      	b.n	80006d0 <MRCC_enumSetPeripheralClock+0xe0>
								case AHB  :	CLEAR_BIT( MRCC->AHBENR  , Copy_u8PeripheralName   );
 8000688:	4b24      	ldr	r3, [pc, #144]	; (800071c <MRCC_enumSetPeripheralClock+0x12c>)
 800068a:	695b      	ldr	r3, [r3, #20]
 800068c:	79ba      	ldrb	r2, [r7, #6]
 800068e:	2101      	movs	r1, #1
 8000690:	fa01 f202 	lsl.w	r2, r1, r2
 8000694:	43d2      	mvns	r2, r2
 8000696:	4611      	mov	r1, r2
 8000698:	4a20      	ldr	r2, [pc, #128]	; (800071c <MRCC_enumSetPeripheralClock+0x12c>)
 800069a:	400b      	ands	r3, r1
 800069c:	6153      	str	r3, [r2, #20]
								break;
 800069e:	e018      	b.n	80006d2 <MRCC_enumSetPeripheralClock+0xe2>
								case APB1 :	CLEAR_BIT(  MRCC->APB1ENR , Copy_u8PeripheralName );
 80006a0:	4b1e      	ldr	r3, [pc, #120]	; (800071c <MRCC_enumSetPeripheralClock+0x12c>)
 80006a2:	69db      	ldr	r3, [r3, #28]
 80006a4:	79ba      	ldrb	r2, [r7, #6]
 80006a6:	2101      	movs	r1, #1
 80006a8:	fa01 f202 	lsl.w	r2, r1, r2
 80006ac:	43d2      	mvns	r2, r2
 80006ae:	4611      	mov	r1, r2
 80006b0:	4a1a      	ldr	r2, [pc, #104]	; (800071c <MRCC_enumSetPeripheralClock+0x12c>)
 80006b2:	400b      	ands	r3, r1
 80006b4:	61d3      	str	r3, [r2, #28]
								break;
 80006b6:	e00c      	b.n	80006d2 <MRCC_enumSetPeripheralClock+0xe2>
								case APB2 : CLEAR_BIT( MRCC->APB2ENR  , Copy_u8PeripheralName  );
 80006b8:	4b18      	ldr	r3, [pc, #96]	; (800071c <MRCC_enumSetPeripheralClock+0x12c>)
 80006ba:	699b      	ldr	r3, [r3, #24]
 80006bc:	79ba      	ldrb	r2, [r7, #6]
 80006be:	2101      	movs	r1, #1
 80006c0:	fa01 f202 	lsl.w	r2, r1, r2
 80006c4:	43d2      	mvns	r2, r2
 80006c6:	4611      	mov	r1, r2
 80006c8:	4a14      	ldr	r2, [pc, #80]	; (800071c <MRCC_enumSetPeripheralClock+0x12c>)
 80006ca:	400b      	ands	r3, r1
 80006cc:	6193      	str	r3, [r2, #24]
								break;
 80006ce:	e000      	b.n	80006d2 <MRCC_enumSetPeripheralClock+0xe2>
								break;
 80006d0:	bf00      	nop
							}
							break;
 80006d2:	e01c      	b.n	800070e <MRCC_enumSetPeripheralClock+0x11e>
		case	RCC_RESET	:	
							switch( Copy_u8PeripheralBus )
 80006d4:	79fb      	ldrb	r3, [r7, #7]
 80006d6:	2b02      	cmp	r3, #2
 80006d8:	d002      	beq.n	80006e0 <MRCC_enumSetPeripheralClock+0xf0>
 80006da:	2b03      	cmp	r3, #3
 80006dc:	d00b      	beq.n	80006f6 <MRCC_enumSetPeripheralClock+0x106>
							{	
								case APB1 :	SET_BIT( MRCC->APB1RSTR , Copy_u8PeripheralName   );break;
								case APB2 : SET_BIT( MRCC->APB2RSTR , Copy_u8PeripheralName );break;
								default	  :	break;
 80006de:	e015      	b.n	800070c <MRCC_enumSetPeripheralClock+0x11c>
								case APB1 :	SET_BIT( MRCC->APB1RSTR , Copy_u8PeripheralName   );break;
 80006e0:	4b0e      	ldr	r3, [pc, #56]	; (800071c <MRCC_enumSetPeripheralClock+0x12c>)
 80006e2:	691b      	ldr	r3, [r3, #16]
 80006e4:	79ba      	ldrb	r2, [r7, #6]
 80006e6:	2101      	movs	r1, #1
 80006e8:	fa01 f202 	lsl.w	r2, r1, r2
 80006ec:	4611      	mov	r1, r2
 80006ee:	4a0b      	ldr	r2, [pc, #44]	; (800071c <MRCC_enumSetPeripheralClock+0x12c>)
 80006f0:	430b      	orrs	r3, r1
 80006f2:	6113      	str	r3, [r2, #16]
 80006f4:	e00a      	b.n	800070c <MRCC_enumSetPeripheralClock+0x11c>
								case APB2 : SET_BIT( MRCC->APB2RSTR , Copy_u8PeripheralName );break;
 80006f6:	4b09      	ldr	r3, [pc, #36]	; (800071c <MRCC_enumSetPeripheralClock+0x12c>)
 80006f8:	68db      	ldr	r3, [r3, #12]
 80006fa:	79ba      	ldrb	r2, [r7, #6]
 80006fc:	2101      	movs	r1, #1
 80006fe:	fa01 f202 	lsl.w	r2, r1, r2
 8000702:	4611      	mov	r1, r2
 8000704:	4a05      	ldr	r2, [pc, #20]	; (800071c <MRCC_enumSetPeripheralClock+0x12c>)
 8000706:	430b      	orrs	r3, r1
 8000708:	60d3      	str	r3, [r2, #12]
 800070a:	bf00      	nop
							}
							break;
 800070c:	bf00      	nop
	}

	return LOC_enumstate;
 800070e:	7bfb      	ldrb	r3, [r7, #15]
}
 8000710:	4618      	mov	r0, r3
 8000712:	3714      	adds	r7, #20
 8000714:	46bd      	mov	sp, r7
 8000716:	bc80      	pop	{r7}
 8000718:	4770      	bx	lr
 800071a:	bf00      	nop
 800071c:	40021000 	.word	0x40021000

08000720 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000720:	b580      	push	{r7, lr}
 8000722:	af00      	add	r7, sp, #0
	MRCC_voidInit();
 8000724:	f7ff ff42 	bl	80005ac <MRCC_voidInit>
	MRCC_enumSetPeripheralClock(APB2 , IOPAEN_ID, RCC_ENABLE );//////////////IOPAEN_ID not yet implemented
 8000728:	2201      	movs	r2, #1
 800072a:	2102      	movs	r1, #2
 800072c:	2003      	movs	r0, #3
 800072e:	f7ff ff5f 	bl	80005f0 <MRCC_enumSetPeripheralClock>
	MRCC_enumSetPeripheralClock(APB2 , IOPBEN_ID, RCC_ENABLE );
 8000732:	2201      	movs	r2, #1
 8000734:	2103      	movs	r1, #3
 8000736:	2003      	movs	r0, #3
 8000738:	f7ff ff5a 	bl	80005f0 <MRCC_enumSetPeripheralClock>
	DIO_voidSetPinDirection(PORTA, 5, GPIO_OUTPUT_2MHZ_PP);
 800073c:	2202      	movs	r2, #2
 800073e:	2105      	movs	r1, #5
 8000740:	2000      	movs	r0, #0
 8000742:	f7ff fd15 	bl	8000170 <DIO_voidSetPinDirection>
	DIO_voidSetPortnDirection(PORTB, GPIO_OUTPUT_2MHZ_PP);
 8000746:	2102      	movs	r1, #2
 8000748:	2001      	movs	r0, #1
 800074a:	f7ff fd99 	bl	8000280 <DIO_voidSetPortnDirection>
	DIO_voidSetPinValue(PORTA, 5, GPIO_HIGH);
 800074e:	2201      	movs	r2, #1
 8000750:	2105      	movs	r1, #5
 8000752:	2000      	movs	r0, #0
 8000754:	f7ff feb2 	bl	80004bc <DIO_voidSetPinValue>
	DIO_voidSetPORTValue(PORTB, 0b0000111111111100);
 8000758:	f640 71fc 	movw	r1, #4092	; 0xffc
 800075c:	2001      	movs	r0, #1
 800075e:	f7ff fe71 	bl	8000444 <DIO_voidSetPORTValue>

    /*  */
	for(;;)
 8000762:	e7fe      	b.n	8000762 <main+0x42>

08000764 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000764:	480d      	ldr	r0, [pc, #52]	; (800079c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000766:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000768:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800076c:	480c      	ldr	r0, [pc, #48]	; (80007a0 <LoopForever+0x6>)
  ldr r1, =_edata
 800076e:	490d      	ldr	r1, [pc, #52]	; (80007a4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000770:	4a0d      	ldr	r2, [pc, #52]	; (80007a8 <LoopForever+0xe>)
  movs r3, #0
 8000772:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000774:	e002      	b.n	800077c <LoopCopyDataInit>

08000776 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000776:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000778:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800077a:	3304      	adds	r3, #4

0800077c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800077c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800077e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000780:	d3f9      	bcc.n	8000776 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000782:	4a0a      	ldr	r2, [pc, #40]	; (80007ac <LoopForever+0x12>)
  ldr r4, =_ebss
 8000784:	4c0a      	ldr	r4, [pc, #40]	; (80007b0 <LoopForever+0x16>)
  movs r3, #0
 8000786:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000788:	e001      	b.n	800078e <LoopFillZerobss>

0800078a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800078a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800078c:	3204      	adds	r2, #4

0800078e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800078e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000790:	d3fb      	bcc.n	800078a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000792:	f000 f811 	bl	80007b8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000796:	f7ff ffc3 	bl	8000720 <main>

0800079a <LoopForever>:

LoopForever:
  b LoopForever
 800079a:	e7fe      	b.n	800079a <LoopForever>
  ldr   r0, =_estack
 800079c:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80007a0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80007a4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80007a8:	08000820 	.word	0x08000820
  ldr r2, =_sbss
 80007ac:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80007b0:	2000001c 	.word	0x2000001c

080007b4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80007b4:	e7fe      	b.n	80007b4 <ADC1_2_IRQHandler>
	...

080007b8 <__libc_init_array>:
 80007b8:	b570      	push	{r4, r5, r6, lr}
 80007ba:	2600      	movs	r6, #0
 80007bc:	4d0c      	ldr	r5, [pc, #48]	; (80007f0 <__libc_init_array+0x38>)
 80007be:	4c0d      	ldr	r4, [pc, #52]	; (80007f4 <__libc_init_array+0x3c>)
 80007c0:	1b64      	subs	r4, r4, r5
 80007c2:	10a4      	asrs	r4, r4, #2
 80007c4:	42a6      	cmp	r6, r4
 80007c6:	d109      	bne.n	80007dc <__libc_init_array+0x24>
 80007c8:	f000 f81a 	bl	8000800 <_init>
 80007cc:	2600      	movs	r6, #0
 80007ce:	4d0a      	ldr	r5, [pc, #40]	; (80007f8 <__libc_init_array+0x40>)
 80007d0:	4c0a      	ldr	r4, [pc, #40]	; (80007fc <__libc_init_array+0x44>)
 80007d2:	1b64      	subs	r4, r4, r5
 80007d4:	10a4      	asrs	r4, r4, #2
 80007d6:	42a6      	cmp	r6, r4
 80007d8:	d105      	bne.n	80007e6 <__libc_init_array+0x2e>
 80007da:	bd70      	pop	{r4, r5, r6, pc}
 80007dc:	f855 3b04 	ldr.w	r3, [r5], #4
 80007e0:	4798      	blx	r3
 80007e2:	3601      	adds	r6, #1
 80007e4:	e7ee      	b.n	80007c4 <__libc_init_array+0xc>
 80007e6:	f855 3b04 	ldr.w	r3, [r5], #4
 80007ea:	4798      	blx	r3
 80007ec:	3601      	adds	r6, #1
 80007ee:	e7f2      	b.n	80007d6 <__libc_init_array+0x1e>
 80007f0:	08000818 	.word	0x08000818
 80007f4:	08000818 	.word	0x08000818
 80007f8:	08000818 	.word	0x08000818
 80007fc:	0800081c 	.word	0x0800081c

08000800 <_init>:
 8000800:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000802:	bf00      	nop
 8000804:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000806:	bc08      	pop	{r3}
 8000808:	469e      	mov	lr, r3
 800080a:	4770      	bx	lr

0800080c <_fini>:
 800080c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800080e:	bf00      	nop
 8000810:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000812:	bc08      	pop	{r3}
 8000814:	469e      	mov	lr, r3
 8000816:	4770      	bx	lr
